<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>开啊福瑞</title>
  
  <subtitle>carefree</subtitle>
  <link href="https://wqlc.github.io/atom.xml" rel="self"/>
  
  <link href="https://wqlc.github.io/"/>
  <updated>2021-02-02T11:11:54.478Z</updated>
  <id>https://wqlc.github.io/</id>
  
  <author>
    <name>youwu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nodejs安装及相关命令</title>
    <link href="https://wqlc.github.io/2021/02/02/nodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
    <id>https://wqlc.github.io/2021/02/02/nodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</id>
    <published>2021-02-02T03:10:41.000Z</published>
    <updated>2021-02-02T11:11:54.478Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine.</p></blockquote><p>根据<a href="https://nodejs.org/en/">nodejs官网</a>描述，nodejs就是js的一个运行时环境, 也有对应的<a href="http://nodejs.cn/">nodejs中文网</a></p><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><ul><li><p><a href="https://nodejs.org/en/download/">下载链接</a></p><p>  windows上安装nodejs很简单，直接下载对应的安装包<a href="https://nodejs.org/dist/v14.15.4/node-v14.15.4-x64.msi">https://nodejs.org/dist/v14.15.4/node-v14.15.4-x64.msi</a>,然后下一步下一步安装就可以了</p></li><li><p>改变原有的环境变量<br>  npm的全局模块的存放路径、catch的存放路径都是默认存放在C盘用户目录下，对于C盘紧张的同学来说还是很不友好，因此我们重新配置对应模块的存放路径：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\workspace\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;D:\workspace\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure><ul><li>在系统环境变量添加NODE_PATH,输入路径为：<br>D:\workspace\nodejs\node_global<br><img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/20210202121317.png"></li></ul></li></ul><h1 id="npm加速"><a href="#npm加速" class="headerlink" title="npm加速"></a>npm加速</h1><p>npm的全称是：<code>Node Package Manager</code>，即nodejs的包管理器（安装、卸载、依赖管理等）。因为国内网络的原因，使用npm下载东西的速度很慢，因此我们可以使用npm的国内镜像来加速。</p><ul><li><p>方法1：配置镜像</p><ul><li>方式1：命令行指定<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org info underscore </span><br></pre></td></tr></table></figure></li><li>方式2：通过config配置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line">npm info underscore （如果上面配置正确这个命令会有字符串response）</span><br></pre></td></tr></table></figure></li><li>方式3：编辑 <code>.npmrc</code> 加入下面内容<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">registry = https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li></ul></li><li><p>方法2：直接使用<code>cnpm</code>（<strong>推荐</strong>）</p><blockquote><p>CNPM 是中国 npm 镜像的客户端， 支持所有的npm命令</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装 cnpm</span></span><br><span class="line"> npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>  安装过后我们就可以在我们刚刚设置的<code>D:\workspace\nodejs\node_global</code>目录下看到我们安装的cnpm包了。<br>  <img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/20210202121904.png" alt="下载的cnpm包"></p></blockquote><ul><li>设置cnpm的环境变量<br>cnpm的执行文件在<code>D:\workspace\nodejs\node_global</code>目录下，我们把这个目录设置到<code>path</code>环境变量下之后就可以使用cnpm了<br><img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/20210202191115.png" alt="设置cnpm的环境变量"></li></ul></li></ul><h1 id="使用cnpm"><a href="#使用cnpm" class="headerlink" title="使用cnpm"></a>使用cnpm</h1><p>根据前面的步骤，我们下载了cnpm之后就可以使用了：</p><ul><li>打开命令行，查看cnpm的版本  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure></li><li>使用cnpm安装<code>express</code>包  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm i express -g</span><br></pre></td></tr></table></figure></li></ul><h1 id="工具集"><a href="#工具集" class="headerlink" title="工具集"></a>工具集</h1><ul><li><a href="http://api.nodejs.cn/">nodejs.cn api</a></li><li><a href="https://www.npmjs.com/">npm包仓库</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="工具" scheme="https://wqlc.github.io/source/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>git安装及相关命令</title>
    <link href="https://wqlc.github.io/2021/02/02/git%E5%AE%89%E8%A3%85%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
    <id>https://wqlc.github.io/2021/02/02/git%E5%AE%89%E8%A3%85%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</id>
    <published>2021-02-02T03:07:53.000Z</published>
    <updated>2021-02-02T03:29:01.384Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>git作为一款优秀的版本控制工具，值得每一个程序猿掌握。详细的介绍请查看 <a href="https://git-scm.com/"><strong>官网</strong></a> 介绍,这里简单贴一下：</p><blockquote><p>Git is a <strong>free</strong> and <strong>open source distributed version control system</strong> designed to handle everything from small to very large projects with speed and efficiency.</p></blockquote><blockquote><p>Git is easy to learn and has a tiny footprint with lightning fast performance. It outclasses SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows.</p></blockquote><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p>git的<a href="https://git-scm.com/downloads">下载链接</a>可以很容易地在官网找到，支持mac\windows\linux\unix等操作系统，并且官网上具有详细的安装步骤，对照安装就可以了。</p><h1 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h1><blockquote><p>git官网提供完备的<a href="https://git-scm.com/doc">文档</a>,包括手册、书籍和视频,还贴心地提供了中文版本，有机会一定要查看官方手册，这里我只是记录一下我经常使用的命令。</p></blockquote><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git status</span><br><span class="line">git add</span><br><span class="line">git commit -m &quot;&quot;</span><br><span class="line">git clone git-resp-link</span><br></pre></td></tr></table></figure><h2 id="将本地仓库和远程仓库关联"><a href="#将本地仓库和远程仓库关联" class="headerlink" title="将本地仓库和远程仓库关联"></a>将本地仓库和远程仓库关联</h2><h2 id="将本地仓库上传到远程仓库的特定分支"><a href="#将本地仓库上传到远程仓库的特定分支" class="headerlink" title="将本地仓库上传到远程仓库的特定分支"></a>将本地仓库上传到远程仓库的特定分支</h2><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://git-scm.com/book/zh/v2">Pro Git Book</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="工具" scheme="https://wqlc.github.io/source/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wqlc.github.io/2021/02/01/index/"/>
    <id>https://wqlc.github.io/2021/02/01/index/</id>
    <published>2021-02-01T13:07:19.040Z</published>
    <updated>2021-02-02T03:29:11.133Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>Document</title></head><body>    <p1>Hello my blog</p1></body></html>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用github+hexo搭建个人博客</title>
    <link href="https://wqlc.github.io/2021/02/01/%E4%BD%BF%E7%94%A8github-hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://wqlc.github.io/2021/02/01/%E4%BD%BF%E7%94%A8github-hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-02-01T02:44:44.000Z</published>
    <updated>2021-02-02T03:06:31.489Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>环境需要<ul><li>git(<a href="">查看安装</a>)</li><li>nodejs(<a href="">查看安装</a>)</li></ul></li></ul><blockquote><p><strong>github</strong> 作为一个优秀的开源平台，免费易用，且背靠微软这棵大树，简直壕无人性！我们可以使用GitHub更加愉快无限制地<strong>交友</strong>。<br><strong>hexo</strong> 是 <code>A fast, simple &amp; powerful blog framework</code>，速度快、支持markdown、快速部署且拥有众多插件支持的快速、简单且功能强大的博客框架</p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近CSDN搞得越来越花里胡哨，用的心累，于是打算搭建自己的博客系统。作为一个穷学生，首先希望能够拥有自己的域名，其次不要花钱，然后就是可以定制，选了一大圈，最终还是决定选择<a href="https://github.com/">github</a>+<a href="https://hexo.io/">hexo</a>来搭建自己的博客，本文主要用来记录具体的博客搭建过程，以及自己的一点心得体会。</p><hr><h1 id="github环境搭建"><a href="#github环境搭建" class="headerlink" title="github环境搭建"></a>github环境搭建</h1><h2 id="创建github账户"><a href="#创建github账户" class="headerlink" title="创建github账户"></a>创建github账户</h2><blockquote><p>已经有github账户的请跳到下一节</p></blockquote><ul><li><p>首先登陆<a href="https://github.com/">github</a><br><img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/github1.png" alt="github首页"><br>点击右上角的<code>sign up</code>进入注册页面</p></li><li><p>注册一个github账号<br><img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/20210202103524.png" alt="注册github账号"><br>请记得验证邮箱</p></li><li><p>点击<code>sign in</code>使用刚刚注册时候的用户名和密码进行登陆<br><img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/20210202103529.png"></p></li></ul><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><blockquote><p>使用github的用户名创建自己的仓库，如果你的github的用户名是<code>zhangsan</code>, 那么你新建的仓库的名字就是 <code>zhangsan.github.io</code>（其他的仓库名无效），后面你的博客的地址就是<code>https://zhangsan.github.io</code></p></blockquote><p>登陆github账号之后，可以通过右上角的<code>+</code>新建一个仓库，仓库的名字必须取名为：<code>用户名.github.io</code>。<br><img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/20210202103533.png" alt="新建仓库，注意仓库名字"></p><p><img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/20210202104734.png" alt="新建仓库，注意仓库名"></p><p>仓库建好之后，我们的博客网站就建成功了，我们可以把仓库使用git工具拉取到本地，然后新建一个index.html，里面写上对应的内容，如下所示，然后再推送到仓库中就可以了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p1</span>&gt;</span>Hello my blog<span class="tag">&lt;/<span class="name">p1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在浏览器中访问<code>用户名.github.io</code>就可以看到你刚刚写的网页了。</p><h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><p>我们可以通过用户名和密码来推送我们的代码，但是总归来说还是不太方便，而且也不太安全。使用ssh key使用非对称加密来确保我们账户的安全，同时可以方便我们提交我们的代码。</p><h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>然后一直回车，就会在用户目录下生成对应的公钥和私钥，对于类Unix用户，对应的文件一般在<code>~/.ssh/</code>目录下，对于windows用户，对应的文件一般在<code>C:/Users/电脑用户名/.ssh</code>目录下。使用记事本打开<code>id_rsa.pub</code>复制里面的内容。打开你的github，进入设置，添加你刚刚复制的公钥。<br><img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/20210202110026.png" alt="添加sshkey"><br><img src="https://cdn.jsdelivr.net/gh/wqlC/blogImages@main/blog/img/20210202110027.png" alt="添加sshkey"></p><h3 id="测试成功"><a href="#测试成功" class="headerlink" title="测试成功"></a>测试成功</h3><p>在命令行中输入下列命令，即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><blockquote><p>Hi ***! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>此时说明ssh-key已经配置成功</p><h1 id="hexo-环境搭建"><a href="#hexo-环境搭建" class="headerlink" title="hexo 环境搭建"></a>hexo 环境搭建</h1><h2 id="hexo-简介"><a href="#hexo-简介" class="headerlink" title="hexo 简介"></a>hexo 简介</h2><h2 id="hexo-原理"><a href="#hexo-原理" class="headerlink" title="hexo 原理"></a>hexo 原理</h2><h2 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h2><h2 id="hexo-初始化"><a href="#hexo-初始化" class="headerlink" title="hexo 初始化"></a>hexo 初始化</h2><h2 id="hexo-新建文章"><a href="#hexo-新建文章" class="headerlink" title="hexo 新建文章"></a>hexo 新建文章</h2><h2 id="hexo-生成并且发布文章"><a href="#hexo-生成并且发布文章" class="headerlink" title="hexo 生成并且发布文章"></a>hexo 生成并且发布文章</h2><h2 id="hexo-常见命令"><a href="#hexo-常见命令" class="headerlink" title="hexo 常见命令"></a>hexo 常见命令</h2><h1 id="hexo-主题介绍"><a href="#hexo-主题介绍" class="headerlink" title="hexo 主题介绍"></a>hexo 主题介绍</h1><h2 id="hexo-主题更改"><a href="#hexo-主题更改" class="headerlink" title="hexo 主题更改"></a>hexo 主题更改</h2><h1 id="github-hexo-配置博客"><a href="#github-hexo-配置博客" class="headerlink" title="github+hexo 配置博客"></a>github+hexo 配置博客</h1><h2 id="备份hexo博客源代码"><a href="#备份hexo博客源代码" class="headerlink" title="备份hexo博客源代码"></a>备份hexo博客源代码</h2><h2 id="上传博客文章到github"><a href="#上传博客文章到github" class="headerlink" title="上传博客文章到github"></a>上传博客文章到github</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="个人博客" scheme="https://wqlc.github.io/source/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>抖音爬虫系列(1)：环境配置</title>
    <link href="https://wqlc.github.io/2021/01/31/%E6%8A%96%E9%9F%B3%E7%88%AC%E8%99%AB%E7%B3%BB%E5%88%97(1)%EF%BC%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://wqlc.github.io/2021/01/31/%E6%8A%96%E9%9F%B3%E7%88%AC%E8%99%AB%E7%B3%BB%E5%88%97(1)%EF%BC%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2021-01-31T12:03:56.000Z</published>
    <updated>2021-02-01T02:22:44.968Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><font color=#999AAA >该系列内容主要介绍抖音爬虫的相关过程。因为科研需要，所以选择爬取抖音的视频数据，包括点赞数量等。爬取思路是首先爬取用户，然后根据用户爬取其对应发布的视频数据。这一个博客我将介绍环境配置。如果需要获取对应的安装包。</font><h1 id="抓包软件"><a href="#抓包软件" class="headerlink" title="抓包软件"></a>抓包软件</h1><h2 id="抓包软件选择"><a href="#抓包软件选择" class="headerlink" title="抓包软件选择"></a>抓包软件选择</h2><p>这里使用的抓包软件是：<a href="https://www.telerik.com/fiddler">Fiddle</a>，因为最新版本的Fiddle比较奇怪，所以我还是选择使用老版本的Fiddle(<strong>5.0</strong>版本)。</p><h2 id="抓包软件配置"><a href="#抓包软件配置" class="headerlink" title="抓包软件配置"></a>抓包软件配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>这里没有什么需要注意的</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>这是初始界面，选择不更新<br><img src="https://img-blog.csdnimg.cn/20201203093421991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="fiddle"></li><li>这是能用到的两个主要的工具按钮<br><img src="https://img-blog.csdnimg.cn/20201203093628606.png" alt="在这里插入图片描述"></li><li>开始配置<blockquote><p>点击Tools -&gt; Options，就可以看到Options的主面板</p></blockquote></li></ul><p><img src="https://img-blog.csdnimg.cn/20201203094009971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="Options General下的东西一般不用变"></p><blockquote><p>在Options的主面板中，点击 Https，设置捕获<strong>HTTPS</strong>的包等，详见下图</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201203094300220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="HTTPS包"></p><blockquote><p>点击<strong>Actions -&gt; Trust Root Certificate</strong>，为电脑安装证书：</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201203095208651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="安装证书"><br>    - 点击Yes<br><img src="https://img-blog.csdnimg.cn/20201203095334681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="点击Yes"><br><img src="https://img-blog.csdnimg.cn/20201203095448886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="安装证书"><br>这样就在电脑端装好了证书<br><img src="https://img-blog.csdnimg.cn/20201203095525751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="安装证书"></p><hr><ul><li>配置允许远程电脑连接（这样就可以抓手机的包了）<blockquote><p>在Options的主面板中，点击 Connections，设置连接规则等。包括端口号的设定，一定要记得选中<strong>允许远程电脑连接</strong>，我们就可以使用这个作为手机的代理，从而抓取手机的包了。</p></blockquote></li></ul><p><img src="https://img-blog.csdnimg.cn/20201203094530627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="连接设置"></p><ul><li>后面的话使用<strong>默认的配置</strong>就可以了</li></ul><h1 id="手机设置"><a href="#手机设置" class="headerlink" title="手机设置"></a>手机设置</h1><h2 id="抖音版本选择"><a href="#抖音版本选择" class="headerlink" title="抖音版本选择"></a>抖音版本选择</h2><p>试了好多版本的抖音，发现6.3.0版本的最好抓包，所以我就使用了<strong>6.3.0版本</strong>的抖音，大家如果需要的话可以关注公众号获取<strong>安装包</strong>。</p><ul><li>安装好抖音之后，记得不要更新，也可以把应用市场的自动更新禁掉。</li></ul><h2 id="配置手机网络"><a href="#配置手机网络" class="headerlink" title="配置手机网络"></a>配置手机网络</h2><h3 id="保证手机和电脑在同一个局域网内"><a href="#保证手机和电脑在同一个局域网内" class="headerlink" title="保证手机和电脑在同一个局域网内"></a>保证手机和电脑在同一个局域网内</h3><p>使用同一个路由器下的网络就行，学校内网应该也是可以的，或者没有路由器的话，用另一个手机开热点给它俩连也可以<br><img src="https://img-blog.csdnimg.cn/20201203101219840.png" alt="在这里插入图片描述"></p><h3 id="设置手机代理"><a href="#设置手机代理" class="headerlink" title="设置手机代理"></a>设置手机代理</h3><ul><li>首先查看电脑的ip<br><img src="https://img-blog.csdnimg.cn/20201203101616515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="查看电脑的IP"></li><li>设置手机代理</li></ul><p><img src="https://img-blog.csdnimg.cn/2020120310205074.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="手机代理设置"><br><img src="https://img-blog.csdnimg.cn/20201203102427454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="手机代理设置"><br>这个时候手机代理就设置好了，如果以上步骤都没有问题的话，这个时候应该已经可以联网了，可以用手机上一下百度，测试一个，如果不可以联网，检查一下你的手机网络代理设置是不是正确的：（电脑ip正确不，前面设置的Fiddle的Options里面的Connetions里面的端口是不是和手机上设置的一样），如果没问题，建议重启一下手机，我的手机连不上网的时候重启一下就好了，然后连接网络，然后就可以上网了。</p><ul><li>安装证书</li></ul><p>因为要爬HTTPS 的包，所以需要安装证书，前面已经知道了你的电脑的ip地址，还有fiddle中设置的端口号，在手机浏览器中输入：<strong>http://电脑ip:端口号</strong>，例如你的电脑的ip是192.168.0.1，设置的端口号是：8888，那么你就要输入：<a href="http://192.168.0.1:8888/">http://192.168.0.1:8888</a><br>如果上一步你的代理设置成功了，那么就会出现这个页面：<br>点击下载证书，然后安装，过程如下：</p><p><img src="https://img-blog.csdnimg.cn/20201203105339362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="手机安装证书"><br>到这里手机就安装好证书了，这个时候打开抖音，我们可以看到Fiddle已经可以抓到抖音的数据包了<br><img src="https://img-blog.csdnimg.cn/20201203105645987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="抖音抓包数据"><br>上面的图就是抖音某用户发布的视频的抓包，我们可以通过分析请求头以及对应的响应获取我们想要的数据了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><font color=#999AAA >以上就是抖音抓包的环境配置阶段，后面我会具体讲解怎么抓取用户信息，视频数据等，码字不易，还请点赞关注，有任何问题请留言，或者关注下方微信公众号获取抖音安装包以及Fiddle安装包等。<h4 id="last-but-not-least"><a href="#last-but-not-least" class="headerlink" title="last but not least"></a>last but not least</h4><p>有<strong>任何问题</strong>，或者想要获取对应的<strong>抖音APK</strong>和<strong>抓包软件</strong>，可以关注下方<strong>公众号</strong>留言，我会及时倾尽所有问您解答<br><img src="https://img-blog.csdnimg.cn/20201202163816302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="公众号是：kedalongkeai"></p><h4 id="last-and-least"><a href="#last-and-least" class="headerlink" title="last and least"></a>last and least</h4><p>如果文章对你有用并且恰好您也手头富裕，可以考虑捐赠一毛钱，我可以升级服务器。</p><p><img src="https://img-blog.csdnimg.cn/20201202163628567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dxbDIwMTQzMDI3MjE=,size_16,color_FFFFFF,t_70" alt="嘻嘻嘻"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="python" scheme="https://wqlc.github.io/source/tags/python/"/>
    
    <category term="爬虫" scheme="https://wqlc.github.io/source/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="抖音" scheme="https://wqlc.github.io/source/tags/%E6%8A%96%E9%9F%B3/"/>
    
  </entry>
  
  <entry>
    <title>使用cdn加速</title>
    <link href="https://wqlc.github.io/2021/01/17/%E4%BD%BF%E7%94%A8cdn%E5%8A%A0%E9%80%9F/"/>
    <id>https://wqlc.github.io/2021/01/17/%E4%BD%BF%E7%94%A8cdn%E5%8A%A0%E9%80%9F/</id>
    <published>2021-01-17T03:45:52.000Z</published>
    <updated>2021-01-17T12:54:28.928Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>在使用github + hexo搭建自己的博客的时候，因为国内的网络环境，图片加载可能非常缓慢。因此我们可以使用免费的cdn来加速</p></blockquote><p>要搭建自己的博客，一个超级简单而且免费的方法就是是用github+hexo，而且可以随意设置。当然国内</p><p>参考文章：<br><a href="https://www.jsdelivr.com/">https://www.jsdelivr.com/</a><br><a href="https://www.cnblogs.com/lfri/p/12212878.html">https://www.cnblogs.com/lfri/p/12212878.html</a><br><a href="https://juejin.cn/post/6844904095807979534">https://juejin.cn/post/6844904095807979534</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="工具" scheme="https://wqlc.github.io/source/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="cdn" scheme="https://wqlc.github.io/source/tags/cdn/"/>
    
  </entry>
  
  <entry>
    <title>butufyTest</title>
    <link href="https://wqlc.github.io/2021/01/16/butufyTest/"/>
    <id>https://wqlc.github.io/2021/01/16/butufyTest/</id>
    <published>2021-01-16T08:38:53.000Z</published>
    <updated>2021-01-16T08:39:54.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>你好</p><p>我号</p><p>大家好</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="hhhh" scheme="https://wqlc.github.io/source/tags/hhhh/"/>
    
  </entry>
  
</feed>
